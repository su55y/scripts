#!/bin/sh

url="$1"
if [ -z "$url" ]; then
    echo "url not passed"
    exit 1
fi

DEFAULT_FORMAT=b/bv+ba
DEFAULT_OUTPUT="$HOME/Videos/YouTube/%(uploader)s/%(title)s.%(ext)s"
echo "$url" |
    grep -qP '^(?:https\:\/\/)?(?:www\.)?(youtube\.com\/playlist\?list=[A-Za-z0-9\-_]{18,34})' &&
    DEFAULT_OUTPUT="$HOME/Videos/YouTube/%(uploader)s/%(playlist_title)s/%(playlist_index)d %(title)s.%(ext)s"

yt-dlp -F "$url"

printf 'choose format (default: '%s'): ' "$DEFAULT_FORMAT"
read -r format
[ -n "$format" ] || format="$DEFAULT_FORMAT"

printf 'choose output (t for title, default: '%s'): ' "$DEFAULT_OUTPUT"
read -r out
[ -n "$out" ] || out="$DEFAULT_OUTPUT"
case $out in
t) out="%(title)s.%(ext)s" ;;
esac

printf 'run with tsp? (Y/n): '
read -r use_tsp
case $use_tsp in
y)
    notify-send -i newsboat -a newsboat "⬇️Start downloading '$url'..."
    qid="$(tsp yt-dlp "$url" -f "$format" -o "$out")"
    tsp -D "$qid" notify-send -i newsboat -a newsboat "✅Download done: '$url'" >/dev/null
    ;;
*)
    yt-dlp "$url" -f "$format" -o "$out"
    ;;
esac
