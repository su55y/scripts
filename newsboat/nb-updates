#!/usr/bin/env -S python -u

from pathlib import Path
import os
import subprocess as sp

notify = lambda msg: sp.run(
    ["notify-send", "-i", "newsboat", "-a", "newsboat updates", msg]
)

DATA_HOME = Path(os.environ.get("XDG_DATA_HOME", Path.home().joinpath(".local/share")))
if not DATA_HOME.exists():
    notify("%s not found" % DATA_HOME)
    exit(1)
DB_PATH = DATA_HOME.joinpath("newsboat/cache.db")
if not DB_PATH.exists():
    notify("%s not found" % DB_PATH)
    exit(1)

import sqlite3
from threading import Thread


def select_count() -> int:
    try:
        with sqlite3.connect(DB_PATH) as conn:
            cur = conn.cursor()
            cur.execute("SELECT COUNT(*) FROM rss_item WHERE unread = 1")
            count, *_ = cur.fetchone()
            return count
    except:
        return -1


if __name__ == "__main__":
    Thread(target=notify, args=("Start updating...",)).start()
    reload_thread = Thread(target=sp.run, args=("newsboat -x reload".split(),))
    reload_thread.start()

    before = select_count()
    reload_thread.join()
    after = select_count()

    if after < 0 or before < 0 or before > after:
        notify("Something went wrong")
    else:
        new = after - before
        notify("%d new updates" % new) if new else notify("No updates")
