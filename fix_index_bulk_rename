#!/bin/sh

show_help() {
    cat <<EOF
usage: $(basename $0) [-l FILE_LIST] [-d DELIMITER] [-w WIDTH] [-h]

options:
  -h           show this help message and exit
  -d DELIMITER index delimiter (default: ' ')
  -l FILE_LIST filelist to rename, if not passed scan current directory
  -w WIDTH     number width (default based on count of files)
EOF
}

DEFAULT_FILE_LIST=/tmp/bulk-rename-file-list.txt
FILE_LIST=
DELIMITER=' '
WIDTH=

parse_args() {
    OPTIND=1
    while getopts "d:l:w:h" opt; do
        case $opt in
        l) FILE_LIST=$OPTARG ;;
        d) DELIMITER=$OPTARG ;;
        w) WIDTH=$OPTARG ;;
        *)
            show_help
            exit 0
            ;;
        esac
    done
    shift $((OPTIND - 1))
    [ "${1:-}" = "--" ] && shift
}

parse_args "$@"

if [ -z "$FILE_LIST" ]; then
    FILE_LIST="$DEFAULT_FILE_LIST"
    printf '' >"$FILE_LIST" || exit 1
    find "$PWD" -type f | while read -r f; do
        if echo "$(basename "$f")" | grep -qP "^\d+${DELIMITER}.+"; then
            echo "$f" >>"$FILE_LIST"
        fi
    done
elif [ ! -f "$FILE_LIST" ]; then
    echo "Files list not found at '$FILE_LIST'"
    exit 1
fi

amount=$(wc -l <"$FILE_LIST")
if [ -z "$WIDTH" ]; then
    numlen=${#amount}
else
    numlen=$WIDTH
fi
numfmt="%0${numlen}d"

printf 'Rename %d files by changing their indexes to %d-digit numbers? [y/N]: ' $amount $numlen
read -r answ
case $answ in
[yY]*) ;;
*) exit 0 ;;
esac

while read -r line; do
    base="$(basename "$line")"
    parent="$(dirname "$line")"
    index="${base%%"$DELIMITER"*}"
    rest="${base#*"$DELIMITER"}"
    if [ ! -f "$line" ]; then
        echo "File '$line' not found"
        continue
    fi
    case $index in
    *[!0-9]*) echo "Invalid number '$index' in line '$line'" ;;
    [[:digit:]]*)
        newname="$(printf "$numfmt" $index)${DELIMITER}$rest"
        [ -n "$parent" ] && newname="$parent/$newname"
        mv -nv "$line" "$newname"
        ;;
    *) echo "Invalid number '$index' in line '$line'" ;;
    esac

done <"$FILE_LIST"
