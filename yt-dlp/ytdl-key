#!/bin/sh

die() {
	[ -n "$1" ] && notify-send -a yt-dlp "$1"
	exit 1
}

DEFAULT_OUTPUT="$HOME/Videos/YouTube/%(uploader)s/%(title)s.%(ext)s"

show_help() {
	cat <<EOF
Usage: $0 [-u url] [-o output] [-h]

Options:
  -u  url to download, can be optional if url present in clipboard
  -o  output path, optional (default: '$DEFAULT_OUTPUT')
EOF
}

url=""
output=""

parse_args() {
	OPTIND=1
	while getopts "h?uo:" opt; do
		case "$opt" in
		h | \?)
			show_help
			exit 0
			;;
		u) url=$OPTARG ;;
		o) output=$OPTARG ;;
		esac
	done

	shift $((OPTIND - 1))
	[ "${1:-}" = "--" ] && shift
}

parse_args "$@"

[ -n "$url" ] || url="$(xclip -o -selection clipboard)"
[ -n "$url" ] || die "no url passed"

[ -n "$output" ] || output="$DEFAULT_OUTPUT"

echo "$url" |
	grep -qP '^(?:https\:\/\/)?(?:www\.)?(youtube\.com\/watch\?v=[A-Za-z0-9\-_]{11}|youtu\.be\/[A-Za-z0-9\-_]{11})' ||
	die "invalid url '$url'"

notify-send -a yt-dlp "⬇️Start downloading '$url'..."
qid="$(tsp yt-dlp "$url" -o "$output" -R infinite || notify-send -a yt-dlp "❌Download failed")"
tsp -D "$qid" notify-send -a yt-dlp "✅Download done: '$url'"
